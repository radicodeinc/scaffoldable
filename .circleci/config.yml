version: 2

shared_build_steps: &shared_build_steps
- checkout

- attach_workspace:
    at: /tmp/workspace

- run:
    name: Downloading CodeClimate Test Reporter
    command: |
      curl -sL https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      chmod +x ./cc-test-reporter

- run:
    name: Storing Rails Version
    command: |
      echo "$RUBY_VERSION/$RAILS_VERSION" > RAILS_VERSION
      cat RAILS_VERSION

# Download and cache dependencies
- restore_cache:
    keys:
    - dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "RAILS_VERSION" }}-{{ checksum "Gemfile" }}-{{ checksum "scaffoldable.gemspec" }}
    # fallback to using the latest cache if no exact match is found
    - dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "RAILS_VERSION" }}

- run:
    name: Installing Dependencies
    command: |
      bundle check || (bundle install --jobs=4 --retry=3 --path vendor/bundle && bundle clean)

- save_cache:
    paths:
    - ./vendor/bundle
    - /usr/local/bundle/config
    key: dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "RAILS_VERSION" }}-{{ checksum "Gemfile" }}-{{ checksum "scaffoldable.gemspec" }}

# run tests!
- run:
    name: Running Tests
    command: |
      mkdir /tmp/test-results
      TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

      bundle exec rspec --format progress \
                        --format RspecJunitFormatter \
                        --out /tmp/test-results/rspec.xml \
                        --format d \
                        $TEST_FILES

- run:
    name: Formatting Coverage
    command: |
      ./cc-test-reporter format-coverage --input-type simplecov --output coverage/codeclimate.coverage.json

# collect reports
- store_test_results:
    path: /tmp/test-results
- store_artifacts:
    path: /tmp/test-results
    destination: test-results

- persist_to_workspace:
    root: ~/scaffoldable
    paths:
    - "*/coverage/codeclimate.coverage.json"
    - "*/cc-test-reporter"

jobs:
  build-ruby25-rails-4.2.9:
    docker:
    - image: circleci/ruby:2.5
      environment:
        RAILS_VERSION: 4.2.9
        ENABLE_CODE_COVERAGE: 1
    working_directory: ~/scaffoldable/ruby25-rails-4.2.9
    steps: *shared_build_steps

  build-ruby25-rails-5.0.7:
    docker:
    - image: circleci/ruby:2.5
      environment:
        RAILS_VERSION: 5.0.7
        ENABLE_CODE_COVERAGE: 1
    working_directory: ~/scaffoldable/ruby25-rails-5.0.7
    steps: *shared_build_steps

  build-ruby25-rails-5.1.6:
    docker:
    - image: circleci/ruby:2.5
      environment:
        RAILS_VERSION: 5.1.6
        ENABLE_CODE_COVERAGE: 1
    working_directory: ~/scaffoldable/ruby25-rails-5.1.6
    steps: *shared_build_steps

  build-ruby25-rails-5.2.0:
    docker:
    - image: circleci/ruby:2.5
      environment:
        RAILS_VERSION: 5.2.0
        ENABLE_CODE_COVERAGE: 1
    working_directory: ~/scaffoldable/ruby25-rails-5.2.0
    steps: *shared_build_steps


  upload-coverage:
    docker:
    - image: circleci/ruby:2.5
      environment:
        CC_TEST_REPORTER_ID: e24daccbf31f152cf730f56c78214354a6126eb238462fc70acada31728cabe0
    steps:
    - attach_workspace:
        at: /tmp/workspace

    - run:
        name: Uploading Code Coverage
        command: |
          cd /tmp/workspace/ruby25-rails-5.2.0
          ./cc-test-reporter upload-coverage --input coverage/codeclimate.coverage.json || true

workflows:
  version: 2
  test:
    jobs:
      - build-ruby25-rails-4.2.9
      - build-ruby25-rails-5.0.7
      - build-ruby25-rails-5.1.6
      - build-ruby25-rails-5.2.0
      - upload-coverage:
          requires:
          - build-ruby25-rails-5.2.0